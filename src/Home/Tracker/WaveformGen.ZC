U0 GenerateSineWave(U32 *buffer, I64 length, F64 freq, U8 velocity) {
    I64 i;
    F64 amplitude = (ToF64(velocity) / 127.0) * 0x7FFF;  // Adjust the amplitude based on velocity
    F64 phase_increment = (2.0 * PI * freq) / 44100.0;  // Assuming a sample rate of 44.1kHz

    F64 phase = 0.0;
    for (i = 0; i < length; i++) {
        I16 sample_value = ToI64((Sin(phase) * amplitude)); // TODO should be ToI16
        buffer[i] = (sample_value << 16) | (sample_value & 0xFFFF);
        phase += phase_increment;
        if (phase >= 2.0 * PI) phase -= 2.0 * PI;
    }
}


// I64 sample_rate = SAMPLE_RATE // whatever your sample rate is
// for (I64 i = 0; i < sample_duration * sample_rate; i++) {
//     sample = sin(2.0 * PI * freq * i / sample_rate);
//     // Then send 'sample' to your audio buffer/output.
// }